[
  {
    "epic": "Phase 1: 后端基础架构搭建 (FastAPI + SQLite)",
    "description": "建立后端服务的基础架构，包括数据库设计、API框架搭建和数据模型定义",
    "tasks": [
      {
        "id": "T01",
        "task": "初始化FastAPI项目，配置开发环境",
        "details": "创建FastAPI项目结构，安装依赖包(fastapi, uvicorn, sqlalchemy, pydantic)，配置CORS和基础中间件",
        "acceptance_criteria": ["FastAPI服务能够启动", "API文档可以正常访问(/docs)", "支持跨域请求"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 2
      },
      {
        "id": "T02",
        "task": "设计并实现Pydantic数据模型",
        "details": "基于demo.tsx中的TypeScript接口，创建Teacher, Student, Appointment, Review, ScoreRecord等数据模型",
        "acceptance_criteria": ["所有核心实体的Pydantic模型已定义", "模型包含适当的验证规则", "支持嵌套模型和关系"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 3
      },
      {
        "id": "T03",
        "task": "配置SQLite数据库，创建表结构和索引",
        "details": "使用SQLAlchemy ORM创建数据库表，设计合理的索引以优化查询性能",
        "acceptance_criteria": ["数据库表结构与模型一致", "创建适当的外键关系", "添加查询性能优化索引"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 2
      },
      {
        "id": "T04",
        "task": "将demo.tsx中的mock数据迁移到SQLite数据库",
        "details": "编写数据迁移脚本，将mockTeachers, mockStudents等示例数据导入数据库",
        "acceptance_criteria": ["所有示例数据成功导入", "数据关系正确建立", "提供数据重置功能"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 2
      },
      {
        "id": "T05",
        "task": "实现教师相关API",
        "details": "GET /api/teachers (列表+搜索+筛选), GET /api/teachers/{id} (详情), 支持分页和排序",
        "acceptance_criteria": ["教师列表API支持搜索和筛选", "教师详情API返回完整信息", "API响应格式标准化"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 4
      },
      {
        "id": "T06",
        "task": "实现预约相关API",
        "details": "POST /api/appointments (创建), GET /api/appointments (查询), PUT /api/appointments/{id} (更新状态)",
        "acceptance_criteria": ["预约创建功能正常", "预约列表支持过滤", "预约状态更新机制"],
        "status": "completed",
        "priority": "medium",
        "estimated_hours": 3
      },
      {
        "id": "T07",
        "task": "实现评价相关API",
        "details": "POST /api/teachers/{id}/reviews (创建评价), GET /api/teachers/{id}/reviews (获取评价列表)",
        "acceptance_criteria": ["评价提交功能", "评价列表获取", "自动更新教师平均评分"],
        "status": "completed",
        "priority": "medium",
        "estimated_hours": 3
      },
      {
        "id": "T08",
        "task": "实现学习分析API",
        "details": "GET /api/analytics/student/{id} (学生进步统计), GET /api/analytics/teacher/{id} (教师教学统计)",
        "acceptance_criteria": ["学生成绩进步统计", "教师教学效果统计", "数据可视化准备"],
        "status": "completed",
        "priority": "low",
        "estimated_hours": 4
      }
    ]
  },
  {
    "epic": "Phase 2: 前端项目重构 (React + TypeScript)",
    "description": "将现有demo代码重构为模块化的React应用，引入现代前端开发工具链",
    "tasks": [
      {
        "id": "T11",
        "task": "创建Vite + React + TypeScript项目",
        "details": "使用Vite脚手架创建项目，配置TypeScript、Tailwind CSS、Lucide React等依赖",
        "acceptance_criteria": ["项目结构清晰", "开发服务器正常运行", "TypeScript配置正确"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 2
      },
      {
        "id": "T12",
        "task": "将demo.tsx拆分为独立页面组件",
        "details": "创建HomePage, TeacherListPage, TeacherDetailPage, AppointmentsPage, AnalyticsPage等页面组件",
        "acceptance_criteria": ["页面组件功能完整", "组件间状态传递正确", "保持原有UI样式"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 6
      },
      {
        "id": "T13",
        "task": "配置React Router，设置页面路由和导航",
        "details": "安装React Router v6，配置路由规则，实现页面间导航",
        "acceptance_criteria": ["路由配置正确", "页面导航功能正常", "支持动态路由参数"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 3
      },
      {
        "id": "T14",
        "task": "集成全局状态管理",
        "details": "实现组件间状态管理，管理用户角色切换、选中教师等状态",
        "acceptance_criteria": ["状态管理功能完整", "状态在组件间正确共享", "持久化关键状态"],
        "status": "completed",
        "priority": "medium",
        "estimated_hours": 3
      },
      {
        "id": "T15",
        "task": "创建共享UI组件 (shadcn/ui 2025重构)",
        "details": "集成最新shadcn/ui组件库，替换原生HTML元素，实现统一设计系统",
        "acceptance_criteria": ["shadcn/ui组件集成完成", "移除forwardRef使用2025标准", "添加data-slot属性", "统一设计语言"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 8
      },
      {
        "id": "T16",
        "task": "集成TanStack Query处理API数据",
        "details": "安装TanStack Query，配置查询客户端，实现数据缓存和同步",
        "acceptance_criteria": ["API数据获取正常", "缓存机制工作", "错误处理完善"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 4
      },
      {
        "id": "T17",
        "task": "教师页面架构简化与合并",
        "details": "合并教师列表和附近教师页面，移除冗余设计，统一为单一教师列表页面",
        "acceptance_criteria": ["移除冗余菜单项和路由", "统一功能逻辑", "简化状态管理", "保持距离显示功能"],
        "status": "completed",
        "priority": "high",
        "estimated_hours": 4
      },
      {
        "id": "T18",
        "task": "教师页面布局全宽优化",
        "details": "实现全宽响应式布局，优化工具栏设计，提升空间利用率",
        "acceptance_criteria": ["全宽布局实现", "统一顶部工具栏", "响应式网格优化", "用户体验提升"],
        "status": "completed",
        "priority": "medium",  
        "estimated_hours": 3
      }
    ]
  },
  {
    "epic": "Phase 3: 前后端联调集成",
    "description": "连接前端应用与后端API，实现数据的双向流动",
    "tasks": [
      {
        "id": "T21",
        "task": "教师功能前后端联调",
        "details": "将教师列表页和详情页与后端API对接，替换mock数据",
        "acceptance_criteria": ["教师数据从API获取", "搜索筛选功能正常", "页面加载状态处理"],
        "status": "todo",
        "priority": "high",
        "estimated_hours": 4
      },
      {
        "id": "T22",
        "task": "实现前端搜索、筛选和排序功能",
        "details": "优化搜索体验，支持实时搜索、多条件筛选、自定义排序",
        "acceptance_criteria": ["搜索响应迅速", "筛选条件准确", "排序功能完整"],
        "status": "todo",
        "priority": "high",
        "estimated_hours": 3
      },
      {
        "id": "T23",
        "task": "预约功能前后端联调",
        "details": "实现预约创建和预约列表功能，确保数据同步",
        "acceptance_criteria": ["预约创建成功", "预约状态更新", "预约列表展示正确"],
        "status": "todo",
        "priority": "high",
        "estimated_hours": 4
      },
      {
        "id": "T24",
        "task": "评价功能前后端联调",
        "details": "实现评价提交和显示功能，自动更新教师评分",
        "acceptance_criteria": ["评价提交正常", "评价显示完整", "教师评分自动更新"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 3
      },
      {
        "id": "T25",
        "task": "学习分析功能前后端联调",
        "details": "连接分析页面与后端统计API，展示学习进度和成绩分析",
        "acceptance_criteria": ["统计数据准确", "图表展示清晰", "数据更新及时"],
        "status": "todo",
        "priority": "low",
        "estimated_hours": 4
      }
    ]
  },
  {
    "epic": "Phase 4: 核心交互功能实现",
    "description": "完善用户交互体验，实现完整的业务流程",
    "tasks": [
      {
        "id": "T31",
        "task": "创建预约表单组件",
        "details": "设计预约模态框，包含表单验证、日期时间选择器、教师信息确认",
        "acceptance_criteria": ["表单验证完整", "用户体验良好", "数据提交成功"],
        "status": "todo",
        "priority": "high",
        "estimated_hours": 4
      },
      {
        "id": "T32",
        "task": "创建评价表单组件",
        "details": "设计多维度评分界面，支持星级评分、标签选择、文字评论",
        "acceptance_criteria": ["评分界面直观", "评价内容丰富", "提交流程顺畅"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 3
      },
      {
        "id": "T33",
        "task": "实现位置功能",
        "details": "集成地理位置API，计算教师距离，实现附近教师推荐",
        "acceptance_criteria": ["位置获取准确", "距离计算正确", "附近教师推荐合理"],
        "status": "todo",
        "priority": "low",
        "estimated_hours": 5
      },
      {
        "id": "T34",
        "task": "完善响应式设计和移动端适配",
        "details": "优化各种屏幕尺寸下的显示效果，确保移动端使用体验",
        "acceptance_criteria": ["移动端布局合理", "交互体验良好", "性能表现优秀"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 4
      },
      {
        "id": "T35",
        "task": "实现错误处理和用户反馈机制",
        "details": "添加全局错误处理，网络错误提示，操作成功反馈",
        "acceptance_criteria": ["错误信息清晰", "用户反馈及时", "异常处理完善"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 3
      }
    ]
  },
  {
    "epic": "Phase 5: 测试、优化与部署",
    "description": "确保应用质量，优化性能，准备生产环境部署",
    "tasks": [
      {
        "id": "T41",
        "task": "后端单元测试和API测试",
        "details": "编写API端点测试，数据模型测试，业务逻辑测试",
        "acceptance_criteria": ["测试覆盖率>80%", "所有API测试通过", "业务逻辑测试完整"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 6
      },
      {
        "id": "T42",
        "task": "前端组件测试和集成测试",
        "details": "使用Jest/Vitest和Testing Library编写组件测试",
        "acceptance_criteria": ["关键组件有测试覆盖", "用户交互流程测试", "集成测试通过"],
        "status": "todo",
        "priority": "medium",
        "estimated_hours": 6
      },
      {
        "id": "T43",
        "task": "性能优化",
        "details": "优化API响应时间，前端打包体积，页面加载速度",
        "acceptance_criteria": ["API响应<500ms", "首屏加载<3s", "打包体积合理"],
        "status": "todo",
        "priority": "low",
        "estimated_hours": 4
      },
      {
        "id": "T44",
        "task": "部署准备",
        "details": "配置Docker容器，设置环境变量，准备生产环境配置",
        "acceptance_criteria": ["Docker镜像构建成功", "环境变量配置完整", "部署脚本可用"],
        "status": "todo",
        "priority": "low",
        "estimated_hours": 4
      },
      {
        "id": "T45",
        "task": "编写文档",
        "details": "API文档、用户使用手册、开发部署文档",
        "acceptance_criteria": ["API文档完整", "用户手册清晰", "部署文档可操作"],
        "status": "todo",
        "priority": "low",
        "estimated_hours": 6
      }
    ]
  }
]